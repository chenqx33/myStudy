package chenqx.newTest;

import chenqx.pojo.Book;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import org.junit.Test;

import java.io.*;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Stream;


/**
 * @author chenqx 2019-10-23
 * @instruction
 */
public class Test7 {
    @Test
    public void should_lambda() {
//        //编译通过
//        Stream.of("a", "b", "c").forEach(str -> {
//            throw new RuntimeException();
//        });

        //编译失败
//        Stream.of("a", "b", "c").forEach(str -> {
//            throw new IOException();
//        });


        //编译通过
        Stream.of("a", "b", "c").forEach(str -> {
            doThrow(new FileNotFoundException());
        });
    }

    //编写一个泛型方法对异常进行包装
    static <E extends Exception> void doThrow(Exception e) throws E {
        throw (E) e;
    }

    @Test
    public void should_constructor() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException {
        Constructor<Book> constructor = Book.class.getConstructor(String.class, String.class);
        Book book = constructor.newInstance("123", "321");
        System.out.println(book);
    }

    @Test
    public void should_hh() {
        byte[] buffer = null;
        File tradeFile = new File("/Users/chenqx/IdeaProjects/myStudy/src/main/resources/chenqx/pojo/Book.class");
        try {
            FileInputStream fis = new FileInputStream(tradeFile);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] b = new byte[1024];
            int n;
            while ((n = fis.read(b)) != -1) {
                bos.write(b, 0, n);
            }
            fis.close();
            bos.close();
            buffer = bos.toByteArray();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

//        Class<?> aClass = new ClassLoaderImpl().defineClass("chenqx.pojo.Book", buffer, 0, buffer.length);

    }


    @Test
    public void should_bigdecimal() {
        System.out.println(new Double("0.0") == 0);
        System.out.println(Integer.valueOf(1).equals(1));
        System.out.println(new BigDecimal("1.0").equals(BigDecimal.valueOf(1.0)));
    }

    @Test
    public void thread() throws InterruptedException {
        AtomicInteger order = new AtomicInteger(0);
        new Thread(() -> {
            for (int i = 0; i < 100; i++) {
                order.incrementAndGet();
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {

                }
            }
        }).start();
        new Thread(() -> {
            while (true) {
                System.out.println(order.get());
                try {
                    Thread.sleep(10);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }).start();
        Thread.sleep(10000);
    }

    @Test
    public void should_getordefault() {
        Map<String, String> map = Maps.newHashMap();
        map.put("123", null);
        System.out.println(map.getOrDefault("123", "321"));
        System.out.println(map.getOrDefault("1234", "321"));
        System.out.println(map.merge("123", "321", (x, y) -> null));
        System.out.println(map);
    }
    @Test
    public void should_double(){
        ArrayList<Integer> open = Lists.newArrayList(678413, 55240, 680963, 590070, 589980, 590140, 590190, 590225, 590275, 451197, 590217, 590174, 589990, 590089, 589986, 590135, 681441, 617007, 674992, 589983, 590232, 651106, 654886, 673571, 679401, 683440, 649888, 644878, 683166, 618556, 680384, 508682, 590083, 589987, 589992, 590043, 590063, 590234, 590047, 590145, 590048, 590051, 590149, 590102, 590252, 590062, 590212, 590213, 590216, 590273, 589982, 590033, 590181, 590052, 590010, 590259, 590004, 590230, 590142, 590219, 590269, 590270, 613841, 636177, 633359, 678850, 586199, 290579, 656352, 637717, 671717, 77910, 678825, 655938, 545707, 593312, 92566, 629296, 641787, 680115, 679411, 679447, 637528, 649612, 652803, 675352, 651934, 552122, 101208, 56709, 653399, 679407, 657126, 657790, 658816, 659906, 660043, 660229, 660282, 660335, 660492, 660497, 660985, 661106, 661385, 662182, 662507, 662516, 662522, 662524, 662648, 662783, 662948, 662949, 662957, 662964, 662971, 662982, 662984, 662990, 662995, 662996, 663001, 663005, 663010, 663012, 663024, 663025, 663027, 663030, 663044, 663045, 663046, 663057, 663058, 663087, 663089, 663103, 663111, 663124, 663699, 663918, 664424, 664628, 665450, 665464, 666271, 666330, 666363, 666661, 668094, 668513, 668610, 655464, 621479, 675348, 1887, 684052, 683131, 617501, 635329, 676671, 75233, 634858, 478898, 565244, 684893, 683626, 678800, 42713, 534924, 618135, 679669, 671920, 683609, 82189, 651050, 679422, 681083, 642437, 636781, 679322, 631074, 550627, 672970, 617168, 680172, 646889, 654471, 672984, 679874, 629128, 684249, 684244, 643063, 672440, 679458, 679475, 579905, 679442, 675477, 683831, 368341, 684233, 467021, 678720, 633550, 652209, 570814, 585154, 680460, 635697, 645611, 642849, 555101, 649009, 259371, 63057, 585854, 672627, 506016, 77747, 103679, 645988, 510931, 678342, 488048, 647800, 669462, 625880, 680542, 325290, 646935, 670799, 654737, 670914, 612445, 684210, 438823, 650622, 643901, 681336, 506027, 489068, 644916, 651653, 322299, 505013, 649613, 17280, 676176, 572247, 609116, 650919, 66349, 75013, 627119, 680657, 676191, 634377, 241682, 679519, 496242, 51508, 543114, 672603, 647808, 684257, 50446, 655581, 680440, 669423, 670262, 54553, 578200, 617592, 635896, 677154, 78005, 632278, 2100, 679403, 69582, 677183, 475601, 504956, 511346, 655289, 683448, 647603, 626709, 644380, 678732, 684152, 592503, 646323, 645155, 645372, 651043, 629704, 615465, 683013, 655565, 633162, 54216, 631168, 635028);
        ArrayList<Integer> gray = Lists.newArrayList(590268, 663116, 590103, 634858, 590172, 590065, 590061, 590062, 590056, 590157, 590158, 590063, 679473, 590264, 540053, 656399, 589993, 589996, 589999, 590000, 590001, 590064, 633347, 662502, 662503, 662505, 662506, 662507, 662508, 662509, 662510, 662511, 662512, 662514, 662515, 662516, 662518, 662519, 662520, 662521, 662522, 662523, 662524, 662945, 662946, 662947, 662948, 662949, 662950, 662951, 662952, 662953, 662954, 662955, 662956, 662957, 662958, 662959, 662960, 662961, 662962, 662963, 662964, 662965, 662966, 662967, 662968, 662969, 662971, 662972, 662973, 662974, 662975, 662976, 662977, 662978, 662979, 662980, 662981, 662982, 662983, 662984, 662985, 662986, 662987, 662988, 662989, 662990, 662991, 662992, 662993, 662994, 662995, 662996, 662997, 662998, 662999, 663000, 663001, 663002, 663003, 663004, 663005, 663006, 663007, 663008, 663009, 663010, 663011, 663012, 663013, 663014, 663015, 663016, 663017, 663018, 663019, 663020, 663021, 663022, 663023, 663024, 663025, 663026, 663027, 663028, 663029, 663030, 663031, 663032, 663033, 663034, 663035, 663036, 663037, 663038, 663039, 663040, 663041, 663042, 663043, 663044, 663045, 663046, 663047, 663048, 663049, 663050, 663051, 663052, 663053, 663054, 663055, 663056, 663057, 663058, 663059, 663060, 663061, 663062, 663063, 663064, 663065, 663066, 663067, 663068, 663069, 663070, 663071, 663072, 663073, 663074, 663075, 663076, 663077, 663078, 663079, 663080, 663081, 663082, 663083, 663084, 663085, 663086, 663087, 663088, 663089, 663090, 663091, 663092, 663093, 663094, 663095, 663096, 663097, 663098, 663099, 663100, 663101, 663102, 663103, 663104, 663105, 663106, 663107, 663108, 663109, 663110, 663111, 663112, 663113, 663114, 663115, 663117, 663118, 663119, 663120, 663121, 663122, 663123, 663124, 663125, 679400, 679401, 679402, 679403, 679404, 679405, 679406, 679407, 679408, 679409, 679410, 679411, 679412, 679413, 679414, 679415, 679416, 679417, 679418, 679419, 679420, 679421, 679422, 679423, 679424, 679425, 679426, 679427, 679428, 679429, 679430, 679431, 679432, 679433, 679434, 679435, 679436, 679437, 679438, 679439, 679440, 679441, 679442, 679443, 679444, 679445, 679446, 679447, 679448, 679449, 679450, 679451, 679452, 679453, 679454, 679455, 679456, 679457, 679458, 679459, 679460, 679461, 679462, 679463, 679464, 679465, 679466, 679467, 679468, 679469, 679470, 679471, 679472, 679474, 679475, 679476, 679477, 679478, 679479, 679480, 679481, 679482, 679483, 679484, 679485, 679486, 679487, 679488, 679489, 679490, 679491, 679492, 679493, 679494, 679495, 679496, 679497, 679498, 679499, 679500, 679501, 679502, 679503, 679504, 679505, 683624, 683625, 683626, 683627, 683628, 683629, 683630, 683631, 683632, 683633, 683634, 683635, 683636, 683637, 683638, 683639, 683640, 683641, 683642, 683643, 683644, 683645, 683646, 683647, 683648, 683649, 683650, 683651, 683652, 683653, 683654, 683655, 683656, 683657, 683658, 683659, 683660, 683661, 683662, 683663, 683664, 683665, 683666, 683667, 683668, 683669, 683670, 683671, 683672, 683673, 683674, 683675, 683676, 683677, 683678, 683679, 683680, 683681, 683682, 683683, 683684, 683685, 683686, 683687, 683688, 683689, 683690, 683691, 683692, 683693, 683694, 683695, 683696, 683697, 683698, 683699, 683700, 683701, 683702, 683703, 683704, 683705, 683706, 683707, 683708, 683709, 683710, 683711, 683712, 683713, 683714, 683715, 683716, 683717, 683718, 683719, 683720, 683721, 683722, 683723, 683724, 683725, 683726, 683727, 683728, 683729, 683730, 683731, 683732, 683733, 683734, 683735, 683736, 683737, 683738, 683739, 683740, 683741, 683742, 683743, 683744, 683745, 683746, 683747, 683748, 683749, 683750, 683751, 683752, 683753, 683754, 683755, 683756, 683757, 683758, 683759, 683760, 683761, 683762, 683763, 683764, 663455, 663457, 663458, 663459, 663460, 663461, 663462, 663463, 663464, 663465, 663466, 663467, 663468, 663469, 663470, 663471, 663472, 663473, 663474, 663475, 670799, 663476, 663477, 663478, 663479, 663480, 663481, 663482, 663483, 663484, 663485, 663486, 663487, 663488, 663489, 663490, 663491, 663492, 663493, 663494, 663495, 663496, 663497, 663498, 663499, 663500, 663501, 663502, 663503, 663505, 663506, 663507, 663508, 663509, 663510, 663511, 663512, 663513, 663514, 683777, 683776, 683775, 683774, 683773, 683772, 683771, 683770, 683769, 683768, 663515, 663516, 663517, 663518, 663519, 663520, 663521, 663522, 663523, 663524, 663525, 663526, 663527, 663528, 663529, 663530, 663531, 663532, 663533, 663534, 665383, 665385, 665386, 665387, 665471, 665472, 665473, 665476, 665477, 665478, 665479, 665480, 665482, 665483, 665484, 665485, 665486, 665492, 683787, 683786, 683785, 683784, 683783, 683782, 683781, 683780, 683779, 683778, 589977, 589978, 589979, 589980, 589981, 589982, 589983, 589984, 589985, 589986, 589987, 589988, 589989, 589990, 589991, 589992, 589994, 589995, 589997, 589998, 590002, 590003, 590004, 590005, 590006, 590007, 590008, 590009, 590010, 590011, 590012, 590013, 590014, 590015, 590016, 590017, 590018, 590019, 590020, 590021, 590022, 590023, 590024, 590025, 590026, 590027, 590028, 590029, 590030, 590031, 590033, 590034, 590035, 590036, 590037, 590038, 590039, 590040, 590041, 590042, 590043, 590044, 590045, 590046, 590047, 590048, 590049, 590050, 590051, 590052, 590053, 590054, 590055, 590057, 590058, 590059, 590060, 590066, 590067, 590068, 590069, 590070, 590071, 590072, 590073, 590074, 590075, 590076, 590977, 590077, 590979, 590078, 590079, 590080, 590081, 590082, 590083, 590084, 590085, 590086, 590087, 590088, 590089, 590090, 590091, 590092, 590093, 590094, 590095, 590096, 590097, 590098, 590099, 590100, 590101, 590102, 590104, 590105, 590106, 590107, 590108, 590109, 590110, 590111, 590112, 590113, 590114, 590115, 590116, 590117, 590118, 590119, 590120, 590121, 590122, 590123, 590124, 590125, 590126, 590127, 590128, 590129, 590130, 590131, 590132, 590133, 590134, 590135, 590136, 590137, 590138, 590139, 590140, 590141, 590142, 590143, 590144, 590145, 590146, 590147, 590148, 590149, 590150, 590151, 590152, 590153, 590154, 590155, 590156, 590159, 590160, 590161, 590162, 590163, 590164, 590165, 590166, 590167, 590168, 590169, 590170, 590171, 590173, 590174, 590175, 590176, 590177, 590178, 590179, 590180, 590181, 590182, 590183, 590184, 590185, 590186, 590187, 590188, 590189, 590190, 590191, 590192, 590193, 590194, 590195, 590196, 590197, 590198, 590199, 590200, 590201, 590202, 590203, 590204, 590205, 590206, 590207, 590208, 590209, 590210, 590211, 590212, 590213, 590214, 590215, 590216, 590217, 590218, 590219, 590220, 590221, 590222, 590223, 590224, 590225, 590226, 590227, 590228, 590229, 590230, 590231, 590232, 590233, 590234, 590235, 590236, 590237, 590238, 590239, 590240, 590241, 590242, 590243, 590244, 590245, 590246, 590247, 590248, 590249, 590250, 590251, 590252, 590253, 590254, 590255, 590256, 590257, 590258, 590259, 590260, 590261, 590262, 590263, 590265, 590266, 590267, 590269, 590270, 590271, 590272, 590273, 590274, 605577, 575252, 633969, 650943, 660640, 662240, 662658, 675334, 678800, 680200, 680433, 645183, 645187, 645190, 645225, 645230, 655599, 658441, 671982, 681116, 681118, 682788, 684438, 615063, 635896, 650946, 660641, 662495, 664634, 677125, 678727, 680192, 680255, 645179, 645188, 645191, 645227, 658438, 666941, 669944, 680969, 681117, 681119, 683947, 684847, 156770, 205685, 282489, 496004, 499153, 501743, 506016, 509238, 515739, 529209, 533885, 537464, 537847, 550492, 552337, 559287, 560481, 561076, 564779, 564942, 565700, 566615, 569990, 574187, 577340, 577789, 581592, 583193, 584982, 585880, 586278, 587597, 587907, 592739, 593533, 594431, 595759, 596263, 596317, 597704, 597973, 598558, 600153, 601138, 605660, 606013, 607154, 609229, 614446, 615690, 615797, 617036, 617038, 617627, 622304, 625880, 628178, 629052, 631242, 631249, 632571, 633072, 633896, 636475, 637385, 640183, 640389, 641804, 642097, 644328, 644447, 644936, 648203, 649811, 652209, 653094, 654956, 658721, 660342, 661927, 619164, 610537, 646268, 622395, 661753, 666322, 491387, 90245, 322299, 653445, 665534, 665533, 665532, 673507, 673508, 26640, 76515, 510931, 557373, 543126, 543130, 64252, 583116, 477946, 507693, 534800, 534456, 534803, 534463, 534806, 534811, 534919, 534920, 534921, 534924, 534925, 534929, 534946, 354479, 75783, 663652, 643753, 65333, 39518, 78918, 569624, 660276, 647596, 617592, 46363, 603560, 477319, 659466, 659465, 77126, 69582, 667535, 503360, 660840, 660847, 667687, 608401, 653250, 655535, 618752, 69270, 504940, 65737, 671665, 80663, 100276, 649612, 575568, 662319, 671922, 674496, 58517, 59572, 92566, 664698, 658566, 54216, 668776, 71361, 505857, 58929, 127746, 663958, 73646, 57787, 77273, 522213, 512382, 662780, 17511, 582822, 672660, 667620, 114301, 64398, 552122, 657175, 537944, 657168, 597385, 59210, 659774, 641883, 651863, 523471, 87068, 98173, 647942, 515742, 655565, 658251, 516471, 6671, 184385, 1, 155535, 671268, 416380, 677058, 488230, 71452, 677183, 641883, 470621, 331581, 411314, 175847, 658336, 665505, 661596, 666329, 671729, 675569, 632188, 581070, 664744, 467146, 647486, 654530, 671597, 595066, 666077, 540412, 658069, 661268, 613122, 678533, 647557, 385568, 660376, 650282, 662057, 663636, 385793, 670529, 672895, 661747, 679841, 592172, 452276, 442211, 521009, 680046, 680415, 548489, 509884, 659812, 626695, 663910, 627891, 623269, 672301, 676600, 656778, 632361, 660533, 673432, 265197, 656652, 659579, 654771, 662338, 570456, 523996, 653418, 584088, 538689, 672984, 650236, 541772, 99735, 645611, 522688, 666415, 314871, 678917, 667487, 672648, 577932, 566980, 610890, 562839, 642848, 68403, 661750, 621669, 674495, 662379, 676387, 675020, 528815, 678320, 592547, 565119, 38564, 667413, 658816, 679644, 508682, 469136, 401346, 675136, 570922, 646634, 450395, 538812, 529856, 596761, 63559, 633659, 71880, 155910, 16593, 680542, 672056, 596746, 69558, 595507, 619212, 657601, 600440, 596020, 596027, 592353, 651225, 649546, 613210, 190061, 673508, 640230, 625221, 106647, 596756, 599297, 592341, 73899, 648359, 568906, 596341, 61580, 556782, 635505, 662193, 417440, 88679, 634750, 604363, 663958, 34932, 654393, 647636, 596068, 667687, 607987, 600997, 660276, 677093, 679804, 540478, 605701, 601441, 605790, 644420, 10335, 538812, 678558, 147597, 529856, 596761, 63559, 633659, 449094, 71880, 635749, 155910, 616647, 643966, 639427, 637873, 16593, 680542, 646011, 52807, 672056, 573879, 596746, 69558, 481479, 679377, 653742, 595507, 477484, 532274, 388320, 651054, 549347, 496250, 595512, 627989, 479611, 484328, 641735, 619212, 609575, 670725, 407890, 477689, 655038, 102686, 477095, 556034, 174741, 265413, 610085, 657601, 624844, 600440, 596020, 670511, 459256, 642273, 640550, 594614, 596027, 341999, 671701, 592833, 642103, 440017, 667706, 592353, 447504, 175483, 541743, 651225, 671136, 207753, 655151, 678335, 624924, 599031, 97672, 307668, 647546, 679107, 392249, 678291, 675829, 680231, 369354, 679825, 639154, 649546, 613210, 480146, 665140, 602870, 360583, 658095, 665913, 671997, 672627, 29217, 664628, 508906, 655699, 667915, 100204, 680357, 658433, 190061, 249770, 653374, 656771, 641834, 298836, 434249, 502169, 430464, 491263, 658634, 572155, 540265, 651731, 657231, 642717, 327851, 674796, 662178, 486203, 72476, 489466, 673508, 680706, 648208, 675976, 640230, 574848, 343217, 330090, 625221, 662183, 106647, 637041, 585340, 184035, 561904, 596756, 434654, 106258, 669270, 678508, 599297, 652998, 638030, 445546, 678486, 452412, 526271, 353888, 432154, 599645, 633370, 662317, 458539, 584849, 592341, 73899, 624216, 680166, 345941, 371758, 462864, 84918, 519574, 673389, 604515, 24017, 423637, 261918, 648359, 364298, 603203, 678939, 612245, 342259, 652848, 631564, 390285, 568906, 573453, 673878, 458227, 640912, 624095, 424426, 604443, 681161, 524803, 453388, 679333, 619368, 617897, 653783, 534501, 596283, 671929, 609222, 654994, 423244, 671604, 646832, 144180, 460795, 643817, 608077, 532830, 459790, 658151, 655583, 666651, 417501, 533575, 596341, 544375, 559775, 666642, 243873, 574850, 621828, 628920, 325727, 595953, 401098, 61580, 477720, 631544, 655131, 649492, 497298, 651789, 315507, 285803, 60559, 675029, 223990, 680068, 499502, 522858, 52144, 462767, 633854, 556782, 666662, 652290, 463668, 58050, 678898, 637587, 588434, 678489, 635505, 668333, 680322, 671584, 623510, 676411, 359702, 570791, 667414, 642729, 672603, 475601, 614689, 386202, 7089, 652699, 641158, 615838, 676965, 464244, 632071, 679176, 57654, 627526, 650848, 642849, 642987, 654881, 209918, 652043, 678851, 681163, 664226, 598335, 595453, 606457, 17824, 636781, 594192, 32099, 615315, 623264, 78005);
        open.removeAll(gray);
        System.out.println(open);
    }

    @Test
    public void should_2(){
        ArrayList<String> strings = Lists.newArrayList("".split(","));
        System.out.println(strings);
    }

    public static void main(String[] args) {
        Thread thread = new Thread();
    }
}
